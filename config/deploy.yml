<% require 'dotenv' ; Dotenv.load ; HOST = [ENV['SUBDOMAIN'], ENV['DOMAIN_NAME']].join('.') %>

service: n8n2
image: <%= ENV['DOCKER_USERNAME'] %>/n8n2

servers:
  - <%= ENV['HOST_IP'] %>

builder:
  arch: amd64
  cache:
    type: gha
    options: mode=max
    image: app-build-cache

ssh:
  user: <%= ENV['HOST_USER'] %>

registry:
  username: <%= ENV['DOCKER_USERNAME'] %>
  password: <%= ENV['DOCKER_PASSWORD'] %>

proxy:
  ssl: true
  host: <%= HOST %>
  app_port: <%= ENV['N8N_PORT'] %>
  healthcheck:
    path: /healthz
    timeout: 15

builder:
  arch: arm64
  local: true
  context: "."
  dockerfile: Dockerfile

env:
  clear:
    GENERIC_TIMEZONE: <%= ENV['TIMEZONE'] %>
    TZ: <%= ENV['TIMEZONE'] %>
    DB_TYPE: postgresdb
    DB_POSTGRESDB_DATABASE: n8n2_database
    DB_POSTGRESDB_PORT: 5432
    DB_POSTGRESDB_HOST: n8n2-db
    DB_POSTGRESDB_USER: n8n2_database
    DB_POSTGRESDB_PASSWORD: <%= ENV['POSTGRES_PASSWORD'] %>
    DB_POSTGRESDB_SCHEMA: public
    N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
    N8N_RUNNERS_ENABLED: true
    DOMAIN_NAME: <%= ENV['DOMAIN_NAME'] %>
    SUBDOMAIN: <%= ENV['SUBDOMAIN'] %>
    N8N_HOST: <%= HOST %>
    N8N_PORT: <%= ENV['N8N_PORT'] %>
    N8N_PROTOCOL: https
    WEBHOOK_URL: <%= "https://#{HOST}/" %>
    NODE_ENV: production
    POSTGRES_PASSWORD: <%= ENV['POSTGRES_PASSWORD'] %>

accessories:
  db:
    image: postgres:17.4
    host: <%= ENV['HOST_IP'] %>
    port: <%= ENV['POSTGRES_PORT'] + ':5432' %>
    env:
      clear:
        POSTGRES_USER: n8n2_database
        POSTGRES_DB: n8n2_database
        POSTGRES_PASSWORD: <%= ENV['POSTGRES_PASSWORD'] %>
    directories:
      - data:/var/lib/postgresql/data
